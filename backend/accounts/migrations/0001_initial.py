# Generated by Django 4.1 on 2024-09-10 04:50

import accounts.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('otp', models.CharField(max_length=6)),
                ('otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('max_otp_try', models.CharField(default=3, max_length=2)),
                ('temporary_password', models.CharField(max_length=9, null=True)),
                ('otp_max_out', models.DateTimeField(blank=True, null=True)),
                ('gender', models.SmallIntegerField(choices=[(1, 'male'), (2, 'female'), (3, 'other'), (4, 'null')], null=True)),
                ('address', models.TextField()),
                ('company', models.TextField()),
                ('location', models.TextField(blank=True)),
                ('city', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('zip_code', models.CharField(max_length=10)),
                ('region', models.CharField(max_length=10)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=10)),
                ('industry_type', models.CharField(max_length=100)),
                ('job_role', models.TextField()),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('user_registered_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=50, validators=[django.core.validators.EmailValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='UserSurveyQuestions',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('eligible', models.BooleanField(default=False)),
                ('answers', models.JSONField()),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(choices=[('Sedan', 'Sedan'), ('SUV', 'SUV'), ('Truck', 'Truck'), ('Semi-truck', 'Semi-truck')], max_length=20)),
                ('number_of_vehicles', models.PositiveIntegerField()),
                ('rto_number', models.CharField(max_length=14)),
                ('update_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserTransportSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=20)),
                ('has_submitted_yearly', models.BooleanField(default=False)),
                ('has_submitted_monthly', models.BooleanField(default=False)),
                ('month', models.CharField(blank=True, choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April')], max_length=20, null=True)),
                ('submitted_months', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEligibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry', models.CharField(choices=[('energy', 'Energy sector including waste to energy'), ('ch4_mitigation', 'CH4 mitigation sector (Venting and flaring removal)'), ('dac_ccus', 'DAC or CCUS'), ('composting_waste', 'Composting or waste management'), ('plastic_alternatives', 'Alternatives to plastics'), ('none', 'None of the above')], max_length=50)),
                ('sub_sector', models.CharField(blank=True, choices=[('solar', 'Solar'), ('wind', 'Wind'), ('hydro', 'Hydro'), ('geothermal', 'Geothermal'), ('tidal_energy', 'Tidal energy'), ('ch4_venting_removal', 'CH4 venting removal'), ('ch4_flaring_removal', 'CH4 flaring removal'), ('ccus', 'CCUS'), ('dac', 'DAC'), ('waste_composting', 'Waste composting'), ('composters', 'Composters'), ('plastic_alternatives', 'Alternatives to plastics materials'), ('waste_to_energy', 'Waste to energy'), ('none', 'None of the above')], max_length=50, null=True)),
                ('country', models.CharField(blank=True, choices=[('least_developed', 'Classified region/country as atleast developed by World Bank'), ('india', 'India'), ('china', 'China'), ('developing_country', 'Other developing countries as classified by world bank'), ('developed_country', 'Developed country as classified by world bank')], max_length=50, null=True)),
                ('activity_performed', models.CharField(blank=True, choices=[('generation', 'Generation of renewable energy or alternative energy'), ('sale_to_grid', 'Renewable energy sale to the grid'), ('selling_alternatives', 'Selling plastic alternatives'), ('selling_composters', 'Selling composters'), ('suppliers_to_renewables', 'Selling sub-parts and semi-finished parts required for enabling renewable energy sector ie., suppliers to renewable energy generation company'), ('distribution', 'Distribution of solar panels or windmills etc')], max_length=50, null=True)),
                ('data_available', models.JSONField(blank=True, null=True)),
                ('eligible', models.BooleanField(default=False)),
                ('attempts', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserElectricitySubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=20)),
                ('has_submitted_yearly', models.BooleanField(default=False)),
                ('has_submitted_monthly', models.BooleanField(default=False)),
                ('submitted_months', models.JSONField(default=dict)),
                ('monthly_electricity_values', models.JSONField(default=dict)),
                ('electricity_value', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode_of_transport', models.CharField(choices=[('Air', 'Air'), ('Road', 'Road'), ('Rail', 'Rail'), ('Sea', 'Sea')], max_length=10)),
                ('distance_kms', models.FloatField()),
                ('start_location', models.CharField(blank=True, max_length=255, null=True)),
                ('end_location', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.FloatField()),
                ('weight_unit', models.CharField(choices=[('Tonnes', 'Tonnes'), ('Kgs', 'Kgs')], max_length=10)),
                ('materials_being_shipped', models.TextField(blank=True, null=True)),
                ('month', models.CharField(blank=True, choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April')], max_length=20, null=True)),
                ('year', models.CharField(max_length=20)),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transports', to='accounts.usertransportsubmission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupplyChainRawMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(max_length=255)),
                ('weight', models.FloatField()),
                ('weight_unit', models.CharField(max_length=10)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('region', models.CharField(blank=True, max_length=10, null=True)),
                ('co2e', models.FloatField()),
                ('co2e_unit', models.CharField(max_length=10)),
                ('currency', models.CharField(max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalesFinanceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=12)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EndOfLifeProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('weight_kg', models.FloatField()),
                ('disposal_method', models.CharField(choices=[('landfill', 'Land Fill Products'), ('composting', 'Composting'), ('incineration', 'Incineration (Burning)'), ('recycling', 'Recycling')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ElectricityData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('electricity_value', models.FloatField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_year', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(2019), django.core.validators.MaxValueValidator(2024)])),
                ('file_type', models.CharField(max_length=20, validators=[accounts.models.validate_file_type])),
                ('files_list', models.TextField()),
                ('update_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FuelConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(choices=[('diesel', 'Diesel'), ('kerosene', 'Kerosene'), ('propane', 'Propane'), ('butane', 'Butane'), ('petrol', 'Petrol'), ('coal', 'Coal'), ('natural_gas', 'Natural Gas'), ('other', 'Other'), ('none', 'None')], max_length=20)),
                ('consumption_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('consumption_unit', models.CharField(choices=[('litres', 'Litres'), ('kgs', 'Kilograms')], max_length=20)),
                ('year', models.PositiveIntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'year')},
            },
        ),
        migrations.CreateModel(
            name='EnergyConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_year', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(2019), django.core.validators.MaxValueValidator(2024)])),
                ('consumption', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99999)])),
                ('files_list', models.TextField()),
                ('update_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'financial_year')},
            },
        ),
    ]
